name: Build and Deploy Catalogue Service

on:
  push:
    branches: [ main ]
    paths:
      - 'catalogue/**'
  workflow_dispatch:

env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: catalogue
  IMAGE_TAG: ${{ github.sha }}

permissions:
  contents: read
  actions: read

jobs:
  build-test-sonar-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        working-directory: catalogue
        run: npm install

      #- name: Test (generate lcov)
      #  working-directory: catalogue
      #  run: |
      #    npm test -- --coverage || true
          # ensure file exists so sonar doesn't fail if tests are skippeddddd
      #    test -f coverage/lcov.info || echo "TN:\n" > coverage/lcov.info

      # ================= SONARCLOUD (pick ONE approach; this is the recommended one) =================
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
           -Dsonar.projectKey=AshwiniEthiraj3_three-tier-arch-demo1
           -Dsonar.organization=ashwiniaethiraj3
           -Dsonar.host.url=https://sonarcloud.io
           -Dsonar.projectBaseDir=catalogue
  env:
    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # ================= AWS / ECR =================
      - name: Configure AWS Credentials (static keys)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names "${ECR_REPOSITORY}" >/dev/null 2>&1 || \
          aws ecr create-repository --repository-name "${ECR_REPOSITORY}" --image-scanning-configuration scanOnPush=true

      - name: Build Docker Image
        env:
          REGISTRY: ${{ steps.ecr.outputs.registry }}
        run: |
          docker build \
            -t "${REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}" \
            -t "${REGISTRY}/${ECR_REPOSITORY}:latest" \
            -f catalogue/Dockerfile catalogue

      - name: Push Docker Image
        env:
          REGISTRY: ${{ steps.ecr.outputs.registry }}
        run: |
          docker push "${REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}"
          docker push "${REGISTRY}/${ECR_REPOSITORY}:latest"


