name: Build and Deploy Shipping Service (Spring Boot)

on:
  push:
    branches: [ main ]
    paths:
      - 'shipping/**'
  workflow_dispatch:

env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: shipping
  IMAGE_TAG: ${{ github.sha }}

permissions:
  contents: read
  actions: read

jobs:
  build-test-sonar-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Build & Test with Maven
        working-directory: shipping
        run: mvn -B clean verify

      # (Optional) Generate JaCoCo report for Sonar
      # - name: Test Coverage Report
      #   working-directory: shipping
      #   run: mvn -B jacoco:report

      # ================= AWS / ECR =================
      - name: Configure AWS Credentials (static keys)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names "${ECR_REPOSITORY}" >/dev/null 2>&1 || \
          aws ecr create-repository --repository-name "${ECR_REPOSITORY}" --image-scanning-configuration scanOnPush=true

      - name: Build Docker Image
        env:
          REGISTRY: ${{ steps.ecr.outputs.registry }}
        run: |
          docker build \
            -t "${REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}" \
            -t "${REGISTRY}/${ECR_REPOSITORY}:latest" \
            -f shipping/Dockerfile shipping

      - name: Push Docker Image
        env:
          REGISTRY: ${{ steps.ecr.outputs.registry }}
        run: |
          docker push "${REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}"
          docker push "${REGISTRY}/${ECR_REPOSITORY}:latest"
